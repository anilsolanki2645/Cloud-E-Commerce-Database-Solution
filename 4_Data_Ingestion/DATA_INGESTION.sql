------------------------------------------------------------------------------------------
                                    -- DATA INGESTION
------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------
                            -- [1] Create a Common FILE_FORMAT for Loading data:
------------------------------------------------------------------------------------------

-- Create a file format for CSV with options to skip the header

CREATE OR REPLACE FILE FORMAT ECOM.PUBLIC.ECOM_CSV_FORMAT
  TYPE = 'CSV'
  FIELD_OPTIONALLY_ENCLOSED_BY = '"'
  FIELD_DELIMITER = ','
  SKIP_HEADER = 1
  NULL_IF = ('NULL', 'null')
  EMPTY_FIELD_AS_NULL = TRUE
  TRIM_SPACE = TRUE;

---------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------
                            -- [2] Create a Procedure for Data Loading:
------------------------------------------------------------------------------------------

-- [2.1] Data Loading for USP_LOAD_PRODUCTS

CREATE OR REPLACE PROCEDURE ECOM.PRODUCT_SCHEMA.USP_LOAD_PRODUCTS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.PRODUCT_SCHEMA.PRODUCTS;

    INSERT INTO ECOM.PRODUCT_SCHEMA.PRODUCTS (PRODUCT_ID, PRODUCT_NAME, CATEGORY, PRICE, DESCRIPTION, STOCK, BRAND)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*products.*[.]csv'') t;

    RETURN ''Data loaded into PRODUCTS'';
END;
';

-- CALL PROCEDURE
CALL ECOM.PRODUCT_SCHEMA.USP_LOAD_PRODUCTS();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*products.*[.]csv') t;

    
-- [2.2] Data Loading for USP_LOAD_CUSTOMERS

CREATE OR REPLACE PROCEDURE ECOM.CUSTOMER_SCHEMA.USP_LOAD_CUSTOMERS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.CUSTOMER_SCHEMA.CUSTOMERS;

    INSERT INTO ECOM.CUSTOMER_SCHEMA.CUSTOMERS (CUSTOMER_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE, ADDRESS, REGISTRATION_DATE)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*customers.*[.]csv'') t;

    RETURN ''Data loaded into CUSTOMERS'';
END;
';


-- CALL PROCEDURE
CALL ECOM.CUSTOMER_SCHEMA.USP_LOAD_CUSTOMERS();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*customers.*[.]csv') t;


-- [2.3] Data Loading for USP_LOAD_ORDERS

CREATE OR REPLACE PROCEDURE ECOM.ORDER_SCHEMA.USP_LOAD_ORDERS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.ORDER_SCHEMA.ORDERS;

    INSERT INTO ECOM.ORDER_SCHEMA.ORDERS (ORDER_ID, CUSTOMER_ID, ORDER_DATE, STATUS, TOTAL_AMOUNT, PAYMENT_METHOD, SHIPPING_ADDRESS)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*orders.*[.]csv'') t;

    RETURN ''Data loaded into ORDERS'';
END;
';


-- CALL PROCEDURE
CALL ECOM.ORDER_SCHEMA.USP_LOAD_ORDERS();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*orders.*[.]csv') t;


-- [2.4] Data Loading for USP_LOAD_ORDER_ITEMS

CREATE OR REPLACE PROCEDURE ECOM.ORDER_ITEM_SCHEMA.USP_LOAD_ORDER_ITEMS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.ORDER_ITEM_SCHEMA.ORDER_ITEMS;

    INSERT INTO ECOM.ORDER_ITEM_SCHEMA.ORDER_ITEMS (ORDER_ITEM_ID, ORDER_ID, PRODUCT_ID, QUANTITY, PRICE, TOTAL_AMOUNT)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*order_items.*[.]csv'') t;

    RETURN ''Data loaded into ORDER_ITEMS'';
END;
';


-- CALL PROCEDURE
CALL ECOM.ORDER_ITEM_SCHEMA.USP_LOAD_ORDER_ITEMS();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*order_items.*[.]csv') t;


-- [2.5] Data Loading for USP_LOAD_PAYMENTS

CREATE OR REPLACE PROCEDURE ECOM.PAYMENT_SCHEMA.USP_LOAD_PAYMENTS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.PAYMENT_SCHEMA.PAYMENTS;

    INSERT INTO ECOM.PAYMENT_SCHEMA.PAYMENTS (PAYMENT_ID, ORDER_ID, PAYMENT_DATE, PAYMENT_AMOUNT, PAYMENT_STATUS, PAYMENT_METHOD)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*payments.*[.]csv'') t;

    RETURN ''Data loaded into PAYMENTS'';
END;
';


-- CALL PROCEDURE
CALL ECOM.PAYMENT_SCHEMA.USP_LOAD_PAYMENTS();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*payments.*[.]csv') t;


-- [2.6] Data Loading for USP_LOAD_SHIPPING

CREATE OR REPLACE PROCEDURE ECOM.SHIPPING_SCHEMA.USP_LOAD_SHIPPING()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.SHIPPING_SCHEMA.SHIPPING;

    INSERT INTO ECOM.SHIPPING_SCHEMA.SHIPPING (SHIPPING_ID, ORDER_ID, SHIPPING_DATE, DELIVERY_DATE, CARRIER, TRACKING_NUMBER, SHIPPING_COST)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*shipping.*[.]csv'') t;

    RETURN ''Data loaded into SHIPPING'';
END;
';


-- CALL PROCEDURE
CALL ECOM.SHIPPING_SCHEMA.USP_LOAD_SHIPPING();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*shipping.*[.]csv') t;


-- [2.7] Data Loading for USP_LOAD_REVIEWS

CREATE OR REPLACE PROCEDURE ECOM.REVIEW_SCHEMA.USP_LOAD_REVIEWS()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS
'
BEGIN
    TRUNCATE TABLE ECOM.REVIEW_SCHEMA.REVIEWS;

    INSERT INTO ECOM.REVIEW_SCHEMA.REVIEWS (REVIEW_ID, PRODUCT_ID, CUSTOMER_ID, RATING, REVIEW_TEXT, REVIEW_DATE, HELPFUL_VOTES)
    SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => ''ECOM.PUBLIC.ECOM_CSV_FORMAT'', PATTERN => ''.*reviews.*[.]csv'') t;

    RETURN ''Data loaded into REVIEWS'';
END;
';


-- CALL PROCEDURE
CALL ECOM.REVIEW_SCHEMA.USP_LOAD_REVIEWS();

-- CROSS CHECK
SELECT t.$1, t.$2, t.$3, t.$4, t.$5, t.$6, t.$7
    FROM @ECOM.PUBLIC.ECOM_DATA_LOAD
    (FILE_FORMAT => 'ECOM.PUBLIC.ECOM_CSV_FORMAT', PATTERN => '.*reviews.*[.]csv') t;
